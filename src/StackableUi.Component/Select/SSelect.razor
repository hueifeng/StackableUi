@{
    var clas = string.Empty;
    if (Size!=null)
    {
        clas+=$" ivu-select-{Size.ToString().ToLower()}";
    }
    if (Disabled)
    {
        clas+= " ivu-select-disabled";
    }
}
<div class="ivu-select ivu-select-single @clas" @onclick="OnSelectClick">
    <CascadingValue Value="@this">
    <div tabindex="0" class="ivu-select-selection">
        <div class="">
            <span class="ivu-select-selected-value">@Text</span>
            <i class="ivu-icon ivu-icon-ios-arrow-down ivu-select-arrow"></i>
        </div>
    </div>
    <div class="ivu-select-dropdown"
         style="width:95%; position: absolute; will-change: top, left; transform-origin: center top; top: 52px; left: 20px;@(IsDropDown?"":"display:none")" x-placement="bottom-start">
        <ul class="ivu-select-not-found" style="display:none;">
            <li>无匹配数据</li>
        </ul>
        <ul class="ivu-select-dropdown-list">
            @ChildContent
        </ul>
        <ul class="ivu-select-loading" style="display: none;">加载中</ul>
    </div>
    </CascadingValue>
</div>

@code{
    private string  Text{get;set;}
    [Parameter] public RenderFragment ChildContent { get; set; }
    ///<summary>
    /// 尺寸
    ///</summary>
    [Parameter]
    public SelectSize? Size { get; set; }=SelectSize.Default;
    /// <summary>
    ///     是否展开
    /// </summary>
    private bool IsDropDown { get; set; }

    ///<summary>
    ///     禁用
    ///</summary>
    [Parameter]
    public bool Disabled { get; set; }
    protected void OnSelectClick(MouseEventArgs args)
    {
        if (Disabled)
        {
            return;
        }
        IsDropDown = IsDropDown != true;
    }
   internal bool TrySetValue(string value, bool requireRefresh)
    {
        Text = value;
        if (requireRefresh)
        {
            StateHasChanged();
        }
        return true;
    }
}